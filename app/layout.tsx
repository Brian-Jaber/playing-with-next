import type { Metadata } from "next";
import { Inter } from "next/font/google";
import Link from 'next/link'
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const links = [
  {href: '/', label: 'Home'},
  {href: '/docs', label: 'Docs'},
  {href: '/todos', label: 'Todos'},
]

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={inter.className}>
        <header>
          <nav>
            <ul className='flex items-center'>
              {links.map(link => (
                <li key={link.href}>
                  <Link href={link.href}>{link.label}</Link>
                </li>
              ))} 
            </ul>
          </nav>
        </header>
        <div>{children}</div>
      </body>
    </html>
  );
}

// Essentially app root. Data fetching.
// Page renders children
// No convention for name of RootLayout
// Pages and folders in same directory rendered as children.
// Cannot pass data down from a layout to children as props

// Try not to make anything a client component unless has to be JS to interact w/ it? Keeping track of state.